{"version":3,"sources":["api/cars.ts","api/colors.ts","App.tsx","index.tsx"],"names":["id","brand","rentPrice","colorId","name","App","useState","query","setQuery","title","setTitle","visibleCars","carsFromServer","filter","car","substr","oneRegisterForTitle","toLowerCase","oneRegisterForSubstr","trim","includes","isIncludesSubstr","selectedCars","type","placeholder","value","onChange","event","target","colorsFromServer","map","color","style","ReactDOM","render","document","getElementById"],"mappings":"qNAAe,GACb,CACEA,GAAI,EAAGC,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEH,GAAI,EAAGC,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEH,GAAI,EAAGC,MAAO,UAAWC,UAAW,IAAKC,QAAS,GAEpD,CACEH,GAAI,EAAGC,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEH,GAAI,EAAGC,MAAO,SAAUC,UAAW,GAAIC,QAAS,GAElD,CACEH,GAAI,EAAGC,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEH,GAAI,EAAGC,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEH,GAAI,EAAGC,MAAO,OAAQC,UAAW,GAAIC,QAAS,GAEhD,CACEH,GAAI,EAAGC,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAEjD,CACEH,GAAI,GAAIC,MAAO,OAAQC,UAAW,IAAKC,QAAS,GAElD,CACEH,GAAI,GAAIC,MAAO,aAAcC,UAAW,IAAKC,QAAS,IChC3C,GACb,CAAEH,GAAI,EAAGI,KAAM,SACf,CAAEJ,GAAI,EAAGI,KAAM,SACf,CAAEJ,GAAI,EAAGI,KAAM,Q,OCoBV,IAAMC,EAAgB,WAC3B,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAMMC,EAhBR,SAAsBJ,GACpB,OAAOK,EAAeC,QAAO,SAAAC,GAG3B,OAXJ,SAA0BL,EAAeM,GACvC,IAAMC,EAAsBP,EAAMQ,cAC5BC,EAAuBH,EAAOE,cAAcE,OAElD,OAAOH,EAAoBI,SAASF,GAO3BG,CAFWP,EAAVb,MAEuBM,MAYbe,CAAaf,GAMjC,OACE,gCACE,uBACEgB,KAAK,OACLC,YAAY,oBACZC,MAAOlB,EACPmB,SAhBe,SAACC,GACpBnB,EAASmB,EAAMC,OAAOH,UAkBpB,yBACEA,MAAOhB,EACPiB,SAfoB,SAACC,GACzBjB,GAAWiB,EAAMC,OAAOH,QAYtB,UAIE,mDAECI,EAAiBC,KAAI,SAACC,GACrB,IAAQ/B,EAAa+B,EAAb/B,GAAII,EAAS2B,EAAT3B,KAEZ,OACE,wBAAQqB,MAAOzB,EAAf,SACGI,GADqBJ,SAO9B,kCACE,gCACE,+BACE,oCACA,uCACA,uCACA,iDAGJ,gCACE,6BACGW,EAAYmB,KAAI,SAAChB,GAChB,IAAQd,EAAyBc,EAAzBd,GAAIC,EAAqBa,EAArBb,MAAOC,EAAcY,EAAdZ,UAEnB,OACE,qCACE,6BAAKF,IACL,6BAAKC,IACL,oBAAI+B,MAAO,CAAED,MAAO,OAApB,iBACA,6BAAK7B,qB,MC7EvB+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0066c250.chunk.js","sourcesContent":["export default [\n  {\n    id: 1, brand: 'Audi', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 2, brand: 'Audi', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 3, brand: 'Ferarri', rentPrice: 500, colorId: 3,\n  },\n  {\n    id: 4, brand: 'Ford', rentPrice: 80, colorId: 1,\n  },\n  {\n    id: 5, brand: 'Peugot', rentPrice: 50, colorId: 1,\n  },\n  {\n    id: 6, brand: 'Ford', rentPrice: 150, colorId: 1,\n  },\n  {\n    id: 7, brand: 'Ford', rentPrice: 140, colorId: 2,\n  },\n  {\n    id: 8, brand: 'Lada', rentPrice: 20, colorId: 3,\n  },\n  {\n    id: 9, brand: 'Opel', rentPrice: 100, colorId: 1,\n  },\n  {\n    id: 10, brand: 'Opel', rentPrice: 100, colorId: 2,\n  },\n  {\n    id: 11, brand: 'Mitsubishi', rentPrice: 300, colorId: 1,\n  },\n];\n","export default [\n  { id: 1, name: 'white' },\n  { id: 2, name: 'black' },\n  { id: 3, name: 'red' },\n];\n","import React, { useState } from 'react';\nimport carsFromServer from './api/cars';\nimport colorsFromServer from './api/colors';\n\n// 1. Render car with color\n// 2. Add ability to filter car by brand name\n// 3. Add ability to filter car by color\n\nfunction isIncludesSubstr(title: string, substr: string) {\n  const oneRegisterForTitle = title.toLowerCase();\n  const oneRegisterForSubstr = substr.toLowerCase().trim();\n\n  return oneRegisterForTitle.includes(oneRegisterForSubstr);\n}\n\nfunction selectedCars(query: string) {\n  return carsFromServer.filter(car => {\n    const { brand } = car;\n\n    return isIncludesSubstr(brand, query);\n  });\n}\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const [title, setTitle] = useState(0);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const visibleCars = selectedCars(query);\n\n  const handleColorChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setTitle(+(event.target.value));\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Find by car brand\"\n        value={query}\n        onChange={handleChange}\n      />\n\n      <select\n        value={title}\n        onChange={handleColorChange}\n      >\n        <option>Chose a color</option>\n\n        {colorsFromServer.map((color) => {\n          const { id, name } = color;\n\n          return (\n            <option value={id} key={id}>\n              {name}\n            </option>\n          );\n        })}\n      </select>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Id</th>\n            <th>Brand</th>\n            <th>Color</th>\n            <th>Rent price</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {visibleCars.map((car) => {\n              const { id, brand, rentPrice } = car;\n\n              return (\n                <>\n                  <td>{id}</td>\n                  <td>{brand}</td>\n                  <td style={{ color: 'red' }}>Red</td>\n                  <td>{rentPrice}</td>\n                </>\n              );\n            })}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}